@model EditEntryViewModel
@{
    ViewData["Title"] = "Edycja hasła";
}

<h1>Edycja hasła</h1>
<div>
    <section>
        <form role="form" id="entryForm" action='/admin/edytuj'>
            @Html.AntiForgeryToken()
            <input type="hidden" name="Id" value="@Model.Entry.Id" />
            <div class="card">
                <div class="card-header">
                    Hasło
                </div>
                <div class="card-body">
                    <div class="form-group form-group-lg">
                        <label for="Name">Hasło (z małej, chyba że nazwa własna):</label>
                        <input type="text"
                            value="@Model.Entry.Name"
                            class="form-control input-lg"
                            autocorrect="off" autocapitalize="none"
                            id="Name" name="Name"
                            placeholder="wpisz tutaj nowe hasło" />
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    Znaczenia
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <div class="input-group" id="Meanings-group">
                            @foreach (var m in Model.Entry.Meanings) {
                                <div class="input-group top-space">
                                    <input type="text"
                                        value="@m"
                                        class="form-control"
                                        autocorrect="off" autocapitalize="none"
                                        name="Meanings"
                                        id="Meanings"
                                        placeholder="znaczenie" />

                                    <div class="input-group-append">
                                        <button type="button"
                                                class="btn btn-danger"
                                                aria-label="Usuń">
                                            Usuń
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" id="Meanings-add">Kolejne znaczenie</button>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    Znaczenia angielskie
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <div class="input-group" id="EnglishMeanings-group">
                            @foreach (var m in Model.Entry.EnglishMeanings) {
                                <div class="input-group top-space">
                                    <input type="text"
                                        value="@m"
                                        class="form-control"
                                        autocorrect="off" autocapitalize="none"
                                        name="EnglishMeanings"
                                        id="EnglishMeanings"
                                        placeholder="ang." />

                                    <div class="input-group-append">
                                        <button type="button"
                                                class="btn btn-danger"
                                                aria-label="Usuń">
                                            Usuń
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" id="EnglishMeanings-add">Kolejne znaczenie angielskie</button>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    Przykłady
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <div class="input-group" id="Examples-group">
                            @foreach (var m in Model.Entry.Examples) {
                                <div class="input-group top-space">
                                    <input type="text"
                                        value="@m"
                                        class="form-control"
                                        autocorrect="off" autocapitalize="none"
                                        name="Examples"
                                        id="Examples"
                                        placeholder="np" />

                                    <div class="input-group-append">
                                        <button type="button"
                                                class="btn btn-danger"
                                                aria-label="Usuń">
                                            Usuń
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <div id="Examples-hint">
                        <div class="alert alert-info" role="alert">
                            Np. <mark>[Kap]</mark> mi powiedział żebym nie stawiał <mark>[kary|kara]</mark> na <mark>[kornerze|korner]</mark>.
                        </div>
                    </div>

                    <button type="button" class="btn btn-primary" id="Examples-add">Kolejny przykład</button>
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    Hasła pokrewne
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <div class="input-group" id="SeeAlso-group">
                            @foreach (var m in Model.Entry.SeeAlso) {
                                <div class="input-group top-space">
                                    <input type="text"
                                        value="@m"
                                        class="form-control"
                                        autocorrect="off" autocapitalize="none"
                                        name="SeeAlso"
                                        id="SeeAlso"
                                        placeholder="zobacz też" />

                                    <div class="input-group-append">
                                        <button type="button"
                                                class="btn btn-danger"
                                                aria-label="Usuń">
                                            Usuń
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" id="SeeAlso-add">Kolejne hasło pokrewne</button>
                </div>
            </div>

            <div class="alert alert-danger" role="alert" id="problems" style="display:none">
                <h3>Łi hew e problem</h3>
                <p>Niestety, coś poszło nie tak:</p>
                <ul id="problem-list">
                </ul>
            </div>

            <div class="form-group form-group-lg">
                <button type="submit"
                        class="btn btn-success btn-lg"
                        id="submitButton">Zapisz zmiany</button>
            </div>
        </form>
    </section>
</div>

<script type="text/javascript">

function hookUpRemoveButtons(uiName) {
    var group = $("#" + uiName + "-group");
    $(group).on('click', '.btn-danger', function(e) {
        e.preventDefault();
        $(this).parent('div').parent('div').remove();
    });
}

function hookUpMulti(uiName, dataName, hint) {
    $("#" + uiName + "-add").click(function() {
        var template = `
            <div class="input-group top-space">
                <input type="text"
                    value=""
                    class="form-control"
                    autocorrect="off" autocapitalize="none"
                    name="` + dataName + `"
                    id="` + dataName + `"
                    placeholder="` + hint + `" />

                <div class="input-group-append">
                    <button type="button"
                            class="btn btn-danger"
                            aria-label="Usuń">
                        Usuń
                    </button>
                </div>
            </div>`;

        var group = $("#" + uiName + "-group");
        group.append(template);
        hookUpRemoveButtons(uiName);
    });
    hookUpRemoveButtons(uiName);
}

function hookUpFormSubmit() {
    $("#entryForm").submit(function(e) {
        e.preventDefault();
        var form = $(this);
        var url  = form.attr('action');
        var data = form.serialize();

        $.ajax({
            type: "POST",
            url:  url,
            data: data
        })
        .done(function(resp) {
            console.log(resp);
            if (resp.success) {
                $("#problems").hide();
                window.history.back();
            } else {
                $("#problems").show();
                var pl = $("#problem-list");
                pl.children().remove();
                for (var i = 0; i < resp.problems.length; ++i) {
                    pl.append("<li>" + resp.problems[i] + "</li>");
                }
            }
        })
        .fail(function(resp, textStatus, errorThrown) {
            console.log(resp);
            $("#problems").show();
            var pl = $("#problem-list");
            pl.children().remove();
            pl.append("<li>" + textStatus + "</li>");
            pl.append("<li>Spróbuj jeszcze raz</li>");
        });
    });
}


document.onreadystatechange = () => {
    if (document.readyState === 'complete') {
        hookUpMulti("Meanings", "Meanings", "znaczenie");
        hookUpMulti("EnglishMeanings", "EnglishMeanings", "ang");
        hookUpMulti("Examples", "Examples", "np");
        hookUpMulti("SeeAlso", "SeeAlso", "zobacz też");

        hookUpFormSubmit();
    }
};
</script>