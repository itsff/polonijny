name: Deploy

on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repo files
        uses: actions/checkout@v2

      # https://github.com/docker/setup-qemu-action
      # QEMU is used for building multi-platform
      # docker images (amd64, arm64)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Docker meta
        id: polonijny # you'll use this in the next step
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            polonijny
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./src
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.polonijny.outputs.tags }}
          labels: ${{ steps.polonijny.outputs.labels }}
          
      # Pull this newly created package on DigitalOcean host,
      # restart service and prune old docker images.    
      - name: Deploy package to DigitalOcean
        uses: appleboy/ssh-action@master
        env:
            GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: GITHUB_USERNAME,GITHUB_TOKEN
          script: |
            docker login -u $GITHUB_USERNAME -p $GITHUB_TOKEN docker.pkg.github.com
            docker pull docker.pkg.github.com/itsff/polonijny/polonijny:latest
            docker-compose --file ~/apps/docker-compose.yaml up -d
            docker image prune -a -f --filter "until=240h"
            
